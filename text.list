     1                                  SECTION .data        ;для инициализированных данных
     2                                  
     3 00000000 0A                      n db 0xa                   ;переменная для переноса строки
     4                                  
     5                                  SECTION .bss         ;для НЕинициализированных данных
     6 00000000 <res 0000000A>          input: resb 10                              ;выделение памяти в 10 байт, где input- адрес первого символа
     7                                  linput equ $-input                           ;адрес с длиной сообщения
     8                                  
     9 0000000A <res 0000000A>          output: resb 10                              ;выделение памяти в 10 байт, где output - адрес первого символа
    10                                  loutput equ $-output                            ;адрес с длиной сообщения
    11                                  
    12                                  SECTION .text      ;начало кода самой программы
    13                                  
    14                                  ;подпрограммы
    15                                  ;вывод записи, использование стандартных обязательных данных
    16                                  PRINT:
    17 00000000 B804000000              mov eax,4
    18 00000005 BB01000000              mov ebx,1
    19 0000000A CD80                    int 80h
    20 0000000C C3                      ret
    21                                  
    22                                  ;ввод записи
    23                                  WRITE:
    24 0000000D B803000000              mov eax,3
    25 00000012 BB00000000              mov ebx,0
    26 00000017 CD80                    int 80h
    27 00000019 C3                      ret
    28                                  
    29                                  
    30                                  
    31                                  
    32                                  
    33                                  ;перевод символьной записи в десятичную запись
    34                                  ;число не может быть больше 256, т.е. трехзначное или меньше
    35                                  ;чтобы вывести число из нескольких цифр, надо выводить каждую цифру отдельно со знаком '0' за каждой из нескольких
    36                                  ;при этом для каждой цифры нужен размер 1 byte
    37                                  ;если ввести символ '0' после нескольких цифр, то не сработает!
    38                                  DECIMAL:
    39                                  
    40 0000001A B903000000              mov ecx,3        ;счетчик, 3 - максим. кол-во символов = 256
    41 0000001F 660FB60425-             movzx ax,[input] ;ввод символа - разные размеры word и byte, поэтому дополняем ax нулями
    41 00000024 [00000000]         
    42 00000028 40B60A                  mov sil,10       ;делитель - на 10 или 0xa в 16-м формате
    43 0000002B BD[0A000000]            mov ebp,output       ;ввод адреса первого символа в ebp
    44 00000030 01CD                    add ebp,ecx      ;увеличиваем адрес в ebp на кол-во проходов,
    45                                  metka:
    46                                  ;делит значение word из ax на byte из cl и результат в виде byte
    47                                  ;целый результат - al 1
    48                                  ;остаток - ah 1
    49 00000032 40F6F6                  div sil
    50 00000035 67886500                mov byte[ebp],ah        ;ввод остатка
    51 00000039 6780450030              add byte[ebp],'0'       ;чтобы вывести число из регистра, его надо перевести в символ путем добавления '0'
    52 0000003E FFCD                    dec ebp                 ;уменьшаем адрес output
    53                                  ;разные размеры word и byte, поэтому дополняем ax нулями
    54 00000040 660FB6C0                movzx ax,al
    55 00000044 4038C6                  cmp sil,al
    56 00000047 7D02                    jge exit  ; sil 10 больше или равно чем al
    57 00000049 E2E7                    loop metka
    58                                  exit:
    59 0000004B FFCD                    dec ebp                 ;уменьшаем адрес output
    60 0000004D 67884500                mov byte[ebp],al        ;ввод целого
    61 00000051 6780450030              add byte[ebp],'0'
    62                                  
    63 00000056 C3                      ret
    64                                  
    65                                  
    66                                  GLOBAL _start
    67                                      _start:
    68                                  
    69                                  ;отсюда начинается обработка и ввод данных:
    70                                  
    71                                  ;ввод символа q, его код в ANCII  113
    72 00000057 B9[00000000]            mov ecx,input        ;ввод адреса
    73 0000005C BA0A000000              mov edx,linput       ;ввод количества символов 1
    74 00000061 E8A7FFFFFF              call WRITE
    75                                  
    76 00000066 E8AFFFFFFF              call DECIMAL
    77                                  
    78                                  
    79                                  ;символ q его номер в ASCII 113
    80                                  ;символ \ его номер в ASCII 92
    81                                  ;символ В его номер в ASCII 66
    82                                  ;символ 5 его номер в ASCII 53
    83                                  ;символ } его номер в ASCII 125
    84                                  ;символ 8 его номер в ASCII 56
    85                                  ;символ * его номер в ASCII 42
    86                                  ;символ Ctrl+F его номер в ASCII 6
    87                                  
    88                                  ;вывод данных
    89 0000006B B9[0A000000]            mov ecx,output
    90 00000070 BA0A000000              mov edx,loutput
    91 00000075 E886FFFFFF              call PRINT
    92                                  
    93                                  ;переход на новую строку
    94 0000007A B9[00000000]            mov ecx, n
    95 0000007F BA01000000              mov edx, 1
    96 00000084 E877FFFFFF              call PRINT
    97                                  
    98                                                       ;здесь заканчивается вывод данных:
    99                                  
   100 00000089 B801000000              mov eax, 1          ;содержимое помещается в регистр в EAX помещается 1 - номер системного вызова "exit"
   101 0000008E BB00000000              mov ebx, 0          ;содержимое помещается в регистр в EBX помещается 0 - параметр вызова "exit" означает код с которым завершится выполнение программы
   102 00000093 CD80                    int 0x80            ;системный вызов. После системного вызова "exit" выполнение программы завершается
