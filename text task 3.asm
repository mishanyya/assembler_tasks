SECTION .data        ;для инициализированных данных

message db "Введите один символ:",0xa,0  ;message - адрес начала строки/массива
lmessage equ $-message        ;lmessage - длина сообщения


n db 0xa                   ;переменная для переноса строки

SECTION .bss         ;для НЕинициализированных данных
input: resb 10      ;выделение памяти в 10 байт, где input- адрес первого символа
linput equ $-input  ;адрес с длиной сообщения

output: resb 10     ;выделение памяти в 10 байт, где output - адрес первого символа
loutput equ $-output    ;адрес с длиной сообщения

SECTION .text      ;начало кода самой программы

;подпрограммы:

;вывод записи, использование стандартных обязательных данных
PRINT:
mov eax,4
mov ebx,1
int 80h
ret

;ввод записи
WRITE:
mov eax,3
mov ebx,0
int 80h
ret


;перевод символьной записи в десятичную запись
;число не может быть больше 256, т.е. трехзначное или меньше
;чтобы вывести число из нескольких цифр, надо выводить каждую цифру отдельно со знаком '0' за каждой из нескольких
;при этом для каждой цифры нужен размер 1 byte
;если ввести символ '0' после нескольких цифр, то не сработает!
DECIMAL:

mov ecx,3        ;счетчик, 3 - максим. кол-во символов = 256
mov al,byte[input] ;ввод символа - разные размеры word и byte, поэтому дополняем ax нулями
mov sil,10       ;делитель - на 10 или 0xa в 16-м формате
mov ebp,output   ;ввод адреса первого символа в ebp
add ebp,ecx      ;увеличиваем адрес в ebp на кол-во проходов,
metka:
;делит значение word из ax на byte из cl и результат в виде byte
;целый результат - al 1
;остаток - ah 1
div sil
mov byte[ebp],ah        ;ввод остатка
add byte[ebp],'0'       ;чтобы вывести число из регистра, его надо перевести в символ путем добавления '0'
dec ebp                 ;уменьшаем адрес output
;разные размеры word и byte, поэтому дополняем ax нулями
movzx ax,al
cmp sil,al
jg exit  ; sil 10 больше или равно чем al
loop metka
exit:
dec ebp                 ;уменьшаем адрес output
mov byte[ebp],al        ;ввод целого
add byte[ebp],'0'
ret

GLOBAL _start
    _start:

;отсюда начинается обработка и ввод данных:

;ввод символа q, его код в ANCII  113
mov ecx,input        ;ввод адреса
mov edx,linput       ;ввод количества символов 1
call WRITE

;вывод данных
mov ecx,input
mov edx,linput
call PRINT

call DECIMAL

;вывод данных
mov ecx,output
mov edx,loutput
call PRINT

;переход на новую строку
mov ecx, n
mov edx, 1
call PRINT
                     ;здесь заканчивается вывод данных:

mov eax, 1          ;содержимое помещается в регистр в EAX помещается 1 - номер системного вызова "exit"
mov ebx, 0          ;содержимое помещается в регистр в EBX помещается 0 - параметр вызова "exit" означает код с которым завершится выполнение программы
int 0x80            ;системный вызов. После системного вызова "exit" выполнение программы завершается
